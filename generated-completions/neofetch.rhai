// Completion script generated for neofetch
fn predicate(ctx){
	let name = ctx.cmd_name;
	name!=()&&name=="neofetch"
}
fn completions(ctx){
	if is_short_flag(ctx){
		return with_format(["-d", "-ra", "-W", "-L", "-v", "-vv"]);
	}
	if is_long_flag(ctx){
		return with_format([["--disable", "Allows you to disable an info line from appearing in the output. 'infoname' i..."],
		["--title_fqdn", "Hide/Show Fully Qualified Domain Name in title"],
		["--package_managers", "Hide/Show Package Manager names . (on, tiny, off)"],
		["--os_arch", "Hide/Show OS architecture"],
		["--speed_type", "Change the type of cpu speed to display. Possible values: current, min, max, ..."],
		["--speed_shorthand", "Whether or not to show decimals in CPU speed"],
		["--cpu_brand", "Enable/Disable CPU brand in output"],
		["--cpu_cores", "Whether or not to display the number of CPU cores Possible values: logical, p..."],
		["--cpu_speed", "Hide/Show cpu speed"],
		["--cpu_temp", "Hide/Show cpu temperature"],
		["--distro_shorthand", "Shorten the output of distro (on, tiny, off)"],
		["--kernel_shorthand", "Shorten the output of kernel"],
		["--uptime_shorthand", "Shorten the output of uptime (on, tiny, off)"],
		["--refresh_rate", "Whether to display the refresh rate of each monitor Unsupported on Windows"],
		["--gpu_brand", "Enable/Disable GPU brand in output. (AMD/NVIDIA/Intel)"],
		["--gpu_type", "Which GPU to display. (all, dedicated, integrated)"],
		["--de_version", "Show/Hide Desktop Environment version"],
		["--gtk_shorthand", "Shorten output of gtk theme/icons"],
		["--gtk2", "Enable/Disable gtk2 theme/font/icons output"],
		["--gtk3", "Enable/Disable gtk3 theme/font/icons output"],
		["--shell_path", "Enable/Disable showing $SHELL path"],
		["--shell_version", "Enable/Disable showing $SHELL version"],
		["--disk_show", "Which disks to display. Possible values: '/', '/dev/sdXX', '/path/to/mount po..."],
		["--disk_subtitle", "What information to append to the Disk subtitle. Takes: name, mount, dir, none"],
		["--disk_percent", "Hide/Show disk percent"],
		["--ip_host", "URL to query for public IP"],
		["--ip_timeout", "Public IP timeout (in seconds)"],
		["--song_format", "Print the song data in a specific format (see config file)"],
		["--song_shorthand", "Print the Artist/Album/Title on separate lines"],
		["--memory_percent", "Display memory percentage"],
		["--music_player", "Manually specify a player to use. Available values are listed in the config f..."],
		["--colors", "Changes the text colors in this order: title, @, underline, subtitle, colon, ..."],
		["--underline", "Enable/Disable the underline"],
		["--underline_char", "Character to use when underlining title"],
		["--bold", "Enable/Disable bold text"],
		["--separator", "Changes the default ':' separator to the specified string. .SS \"COLOR BLOCKS:\""],
		["--color_blocks", "Enable/Disable the color blocks"],
		["--col_offset", "Left-padding of color blocks"],
		["--block_width", "Width of color blocks in spaces"],
		["--block_height", "Height of color blocks in lines"],
		["--block_range", "Range of colors to print as blocks .SS \"BARS:\""],
		["--bar_char", "Characters to use when drawing bars"],
		["--bar_border", "Whether or not to surround the bar with '[]'"],
		["--bar_length", "Length in spaces to make the bars"],
		["--bar_colors", "Colors to make the bar. Set in this order: elapsed, total"],
		["--cpu_display", "Bar mode. Possible values: bar, infobar, barinfo, off"],
		["--memory_display", "Bar mode. Possible values: bar, infobar, barinfo, off"],
		["--battery_display", "Bar mode. Possible values: bar, infobar, barinfo, off"],
		["--disk_display", "Bar mode. Possible values: bar, infobar, barinfo, off .SS \"IMAGE BACKEND:\""],
		["--backend", "Which image backend to use. Possible values: 'ascii', 'caca', 'chafa', 'jp2a'..."],
		["--source", "Which image or ascii file to use. Possible values: 'auto', 'ascii', 'wallpape..."],
		["--ascii", "Shortcut to use 'ascii' backend"],
		["--caca", "Shortcut to use 'caca' backend"],
		["--chafa", "Shortcut to use 'chafa' backend"],
		["--iterm2", "Shortcut to use 'iterm2' backend"],
		["--jp2a", "Shortcut to use 'jp2a' backend"],
		["--kitty", "Shortcut to use 'kitty' backend"],
		["--pixterm", "Shortcut to use 'pixterm' backend"],
		["--sixel", "Shortcut to use 'sixel' backend"],
		["--termpix", "Shortcut to use 'termpix' backend"],
		["--tycat", "Shortcut to use 'tycat' backend"],
		["--w3m", "Shortcut to use 'w3m' backend"],
		["--off", "Shortcut to use 'off' backend (Disable ascii art)"],
		["--ascii_colors", "Colors to print the ascii art"],
		["--ascii_distro", "Which Distro's ascii art to print"],
		["--ascii_bold", "Whether or not to bold the ascii logo"],
		["--logo", "Hide the info text and only show the ascii logo. .SS \"IMAGE:\""],
		["--loop", "Redraw the image constantly until Ctrl+C is used. This fixes issues in some t..."],
		["--size", "How to size the image. Possible values: auto, 00px, 00%, none"],
		["--size", "How to size the image. Possible values: auto, 00px, 00%, none"],
		["--crop_mode", "Which crop mode to use Takes the values: normal, fit, fill"],
		["--crop_offset", "Change the crop offset for normal mode. Possible values: northwest, north, no..."],
		["--xoffset", "How close the image will be to the left edge of the window. This only works w..."],
		["--yoffset", "How close the image will be to the top edge of the window. This only works wi..."],
		["--bg_color", "Background color to display behind transparent image. This only works with w3m"],
		["--gap", "Gap between image and text"],
		["--gap", "closer to the left side"],
		["--clean", "Delete cached files and thumbnails. .SS \"OTHER:\""],
		["--config", "Specify a path to a custom config file"],
		["--config", "Launch the script without a config file"],
		["--no_config", "Don't create the user config file"],
		["--print_config", "Print the default config file to stdout"],
		["--stdout", "Turn off all colors and disables any ASCII/image backend"],
		["--help", "Print this text and exit"],
		["--version", "Show neofetch version"],
		["--gen-man", "Generate a manpage for Neofetch in your PWD. (Requires GNU help2man)"]]);
	}
	[]
}
