// Completion script generated for bib2gls
fn predicate(ctx){
	let name = ctx.cmd_name;
	name!=()&&name=="bib2gls"
}
fn completions(ctx){
	if is_short_flag(ctx){
		return with_format(["-h", "-v", "-l", "-t", "-d", "-x", "-p", "-k", "-u", "-m", "-g", "-r", "-c", "-n"]);
	}
	if is_long_flag(ctx){
		return with_format([["--help", "Display help message and exit"],
		["--version", "Display version information and exit"],
		["--debug", "Switch on the debug mode (optionally at the given level, which should be a no..."],
		["--no-debug", "Switch off debug mode. (Equivalent to --debug 0)"],
		["--nodebug", "Switch off debug mode. (Equivalent to --debug 0)"],
		["--verbose", "Switch on verbose mode"],
		["--no-verbose", "Switch off verbose mode. (Some messages will still be written to \\s-1STDOUT.\\s0)"],
		["--noverbose", "Switch off verbose mode. (Some messages will still be written to \\s-1STDOUT.\\s0)"],
		["--silent", "Only display error messages. All other messages are just written to the trans..."],
		["--locale", "Use language resource file for lang (which should be an \\s-1IETF\\s0 locale tag)"],
		["--log-file", "Set the transcript file"],
		["--dir", "Files are relative to directory. (This doesn't change the current working dir..."],
		["--tex-encoding", "Set the character encoding for the output files. This overrides the setting g..."],
		["--interpret", "Use the TeX parser library to interpret known (La)TeX commands (default)"],
		["--no-interpret", "Don't try interpreting (La)TeX commands"],
		["--break-space", "Interpret \\f(CW\\*(C`~\\*(C' (tilde) character and \\f(CW\\*(C`nobreakspace\\*(C' ..."],
		["--no-break-space", "Interpret \\f(CW\\*(C`~\\*(C' (tilde) and \\f(CW\\*(C`nobreakspace\\*(C' as a non-b..."],
		["--obey-aux-catcode", "Obey known category code changing commands encountered in the aux file"],
		["--no-obey-aux-catcode", "Ignore category code changing commands encountered in the aux file"],
		["--cite-as-record", "Treat \\f(CW\\*(C`citation\\*(C' as an ignored record"],
		["--no-cite-as-record", "Don't check for instances of \\f(CW\\*(C`citation\\*(C' in the .aux file (default)"],
		["--warn-non-bib-fields", "Warn if internal non-bib fields are found in the .bib file"],
		["--no-warn-non-bib-fields", "Don't warn if internal non-bib fields are found in the .bib file. The use of ..."],
		["--warn-unknown-entry-types", "Warn if any unknown entry types are found in the .bib file"],
		["--no-warn-unknown-entry-types", "Don't warn if any unknown entry types are found in the .bib file"],
		["--merge-wrglossary-records", "Merge an entry's wrglossary records for the same page locations. (For use wit..."],
		["--no-merge-wrglossary-records", "Don't merge an entry's wrglossary records"],
		["--collapse-same-location-range", "Collapse an explicit range that has a duplicate start and end location into a..."],
		["--no-collapse-same-location-range", "Don't collapse an explicit range that has a duplicate start and end location ..."],
		["--retain-formats", "Indicates which location formats should always be retained even if it causes ..."],
		["--no-retain-formats", "Normal location merging rules apply (default)"],
		["--merge-nameref-on", "Rule for merging locations created with the record=nameref package option (re..."],
		["--force-cross-resource-refs", "Force cross-resource referencing mode on"],
		["--no-force-cross-resource-refs", "Don't force cross-resource referencing mode on (default)"],
		["--support-unicode-script", "Text superscript (\\f(CW\\*(C`textsuperscript\\*(C') or subscripts (\\f(CW\\*(C`te..."],
		["--no-support-unicode-script", "Text superscript (\\f(CW\\*(C`textsuperscript\\*(C') or subscripts (\\f(CW\\*(C`te..."],
		["--packages", "Instruct the TeX parser library to pretend the packages listed  in list have ..."],
		["--custom-packages", "Instruct the TeX parser library to attempt to parse the  packages listed in l..."],
		["--ignore-packages", "Don't parse the log file for the packages listed in list. Note that --package..."],
		["--list-known-packages", "Lists all the packages that have are known to the TeX parser library and then..."],
		["--mfirstuc-protection", "Insert an empty group if fields start with certain problematic commands to pr..."],
		["--no-mfirstuc-protection", "Switch off the auto-insertion of an empty group for all fields"],
		["--mfirstuc-math-protection", "Switch on the auto-insertion of an empty group for math-shift (\\f(CW\\*(C`$\\*(..."],
		["--no-mfirstuc-math-protection", "Switch off the auto-insertion of an empty group for math-shift (\\f(CW\\*(C`$\\*..."],
		["--nested-link-check", "Check each field listed in list for potentially problematic nested link text...."],
		["--no-nested-link-check", "Don't check for potentially problematic nested link text. (Equivalent to --ne..."],
		["--shortcuts", "Check for the shortcut commands when searching for dependencies. Permitted va..."],
		["--map-format", "Set location format mappings"],
		["--group", "Add group field to entries"],
		["--no-group", "Don't add group field to entries (default)"],
		["--record-count-rule", "Sets the rule used by --record-count and --record-count-unit. This option aut..."],
		["--record-count", "Add record count fields to entries"],
		["--no-record-count", "Don't add record count field to entries (default). This option automatically ..."],
		["--record-count-unit", "Add unit record count fields to entries. This option automatically implements..."],
		["--no-record-count-unit", "Don't add unit record count field to entries (default)"],
		["--trim-fields", "Trim leading and trailing spaces from all fields. This option cancels --trim-..."],
		["--trim-only-fields", "Trim leading and trailing spaces from only the listed fields. This option is ..."],
		["--trim-except-fields", "Trim leading and trailing spaces from all fields except those listed. This op..."],
		["--no-trim-fields", "Don't trim leading and trailing spaces from fields (default). This option can..."],
		["--expand-fields", "Don't write \\f(CW\\*(C`glsnoexpandfields\\*(C' to the .glstex file"],
		["--no-expand-fields", "Write \\f(CW\\*(C`glsnoexpandfields\\*(C' to the .glstex file (default)"],
		["--provide-glossaries", "Write \\f(CW\\*(C`provideignoredglossary*\\*(C' to the .glstex file to provide u..."],
		["--no-provide-glossaries", "Don't write \\f(CW\\*(C`provideignoredglossary*\\*(C' to the .glstex file to pro..."],
		["--replace-quotes", "Replace single and double quote characters (\\f(CW\\*(C`\\*(Aq\\*(C' and \\f(CW\\*(..."],
		["--no-replace-quotes", "Don't replace quote characters (default)"]]);
	}
	[]
}
